{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "TK AWS CloudFormation EC2 Stack",

  "Parameters" : {

  },

  "Mappings" : {

  },

  "Resources" : {
    
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "TK-EC2-Stack-VPC" }
        ]
      }
    },
    
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ 
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "TK-EC2-Stack-IGW" }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [ 
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "TK-EC2-Stack-PublicRouteTable" }
        ]
      }
    },

    "RouteGlobal" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    
    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.11.0/24",
        "AvailabilityZone": "us-east-1a",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "TK-EC2-Stack-PublicSubnet" }
        ]
      }
    },
    
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    
    "PublicMachine" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId": "ami-0747bdcabd34c712a",
        "InstanceType" : "t2.micro",     
        "KeyName" : "tk_ssh_key",
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeleteOnTermination" : "true",
          "DeviceIndex": "0",
          "GroupSet": [ 
            { "Ref" : "SSHIngressTrafficFromOutsideSecurityGroup" },
            { "Ref" : "HTTPIngressTrafficFromOutsideSecurityGroup" },
          ],
          "SubnetId": { "Ref" : "PublicSubnet" }
        } ],
        "Tags" : [
            { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
            { "Key" : "Name", "Value" : "TK-EC2-Stack-PublicMachine" }
        ]
      }
    },
    
    "SSHIngressTrafficFromOutsideSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Alow SSH ingress traffic from outside",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "37.214.0.0/16" }
        ]
      }
    },
    
    "HTTPIngressTrafficFromOutsideSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Alow HTTP ingress traffic from outside",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "8888", "ToPort" : "8888", "CidrIp" : "0.0.0.0/0" }
        ]
      }
    }

  },


  "Outputs" : {

  }
}
